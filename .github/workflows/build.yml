name: Build
on: [ push ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          # Exclude path to prevent caching of generated artifacts
          path: |
            ~/.m2/repository/*
            !~/.m2/repository/com/googlecode/cmake-maven-project
          key: ${{ runner.OS }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.OS }}-maven-

      - name: Show versions
        run: |
          java --version
          ./mvnw --version

      - name: Build
        run: ./mvnw install -e

  build-arm:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: armv6
            distro: alpine_latest
          - arch: armv7
            distro: alpine_latest
          - arch: aarch64
            distro: alpine_latest

    # Source: https://github.com/lh3/bwa/blob/139f68fc4c3747813783a488aef2adc86626b01b/.github/workflows/ci.yaml#L33-L46
    #  gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          # Exclude path to prevent caching of generated artifacts
          path: |
            ~/.m2/repository/*
            !~/.m2/repository/com/googlecode/cmake-maven-project
          key: ${{ runner.OS }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.OS }}-maven-

      - name: Build
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          install: |
            apk update
            apk add gnupg ca-certificates wget
            
            wget -P /etc/apk/keys/ https://cdn.azul.com/public_keys/alpine-signing@azul.com-5d5dc44c.rsa.pub
            echo "https://repos.azul.com/zulu/alpine" | tee -a /etc/apk/repositories
            apk update
            apk add zulu11-jdk
            
            apk add build-base
          setup: mkdir -p "${PWD}/.m2"
          dockerRunArgs: --volume "${PWD}/.m2:/.m2" -e GITHUB_WORKSPACE=${GITHUB_WORKSPACE}
          run: |
            export JAVA_HOME=`which java | xargs readlink -f | xargs dirname | xargs dirname`
            cd "${GITHUB_WORKSPACE}"
            ./mvnw install -e