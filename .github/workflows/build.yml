name: Build
on: [push]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11.0.7
      - name: Cache Maven dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.OS }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.OS }}-maven-
      - name: Show versions
        run: |
          java --version
          mvn --version
      - name: Build
        run: mvn install -e
      - name: Prevent generated artifacts from getting cached
        shell: cmd
        run: del /s /q %USERPROFILE%\.m2\repository\com\googlecode\cmake-maven-project
        if: matrix.os == 'windows-latest'
      - name: Prevent generated artifacts from getting cached
        run: rm -rf ~/.m2/repository/com/googlecodecmake-maven-project
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      - name: irc notification
        uses: rectalogic/notify-irc@v1
        if: ${{ success() }}
        with:
          channel: "#freelibrary"
          nickname: cmake-maven-project-notifier
          message: |
            [Success] ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}
            ${{ join(github.event.commits.*.message) }}
      - name: irc notification
        uses: rectalogic/notify-irc@v1
        if: ${{ failure() }}
        with:
          channel: "#freelibrary"
          nickname: cmake-maven-project-notifier
          message: |
            [Failure] ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}
            ${{ join(github.event.commits.*.message) }}