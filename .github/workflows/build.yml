name: Build
on: [ push ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    strategy:
      matrix:
        runtime: [ linux-x64, linux-arm64, linux-arm, win-x64, osx-x64, osx-arm64, win-arm64 ]
        include:
          - runtime: linux-x64
            os: ubuntu-latest

          - runtime: linux-arm64
            os: ubuntu-latest

          - runtime: linux-arm
            os: ubuntu-latest

          - runtime: osx-x64
            os: macOS-latest

          - runtime: osx-arm64
            os: macOS-latest

          - runtime: win-x64
            os: windows-latest

          - runtime: win-arm64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: |
            8
            17

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          # Avoid caching generated artifacts
          path: |
            ~/.m2/repository/*
            !~/.m2/repository/com/googlecode/cmake-maven-project
          key: ${{ runner.OS }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.OS }}-maven-

      # Maven command-line options:
      # --batch-mode: recommended in CI to inform maven to not run in interactive mode (less logs)
      # -V: strongly recommended in CI, will display the JDK and Maven versions in use.
      #      Very useful to be quickly sure the selected versions were the ones you think.
      # -Dsurefire.useFile=false : useful in CI. Displays test errors in the logs directly (instead of
      #                            having to crawl the workspace files to see the cause).
      # -e : Display stack-traces on failure
      - name: Build
        if: ${{ matrix.runtime != 'win-arm64' }}
        run: ./mvnw install --batch-mode -V "-Dsurefire.useFile=false" -e
      - name: Build
        if: ${{ matrix.runtime == 'win-arm64' }}
        run: ./mvnw -Pwindows-arm_64 install --batch-mode -V "-Dsurefire.useFile=false" -e
